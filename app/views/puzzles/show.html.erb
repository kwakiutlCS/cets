<div class="container">

<div id="puzzle_title"><h2><%= @puzzle.title %></h2></div>
<div id="puzzle_explanation"><% if @puzzle.description %><%= @puzzle.description %><% else %>Find the best move(s)<% end %></div>
<div><div id="moveResult"></div><div id="puzzle_navigation" style="display:none"><%= link_to "Back", puzzles_path %><%= link_to "Next Puzzle", @puzzle %></div></div>



<div class="row">
<div id="comments_box" class="span4">

<div id="comments_list" style="display:none">
  <% @comments.each do |c| %>
  <div class="comment_row"><div class="comment_text"><%= c.text %></div><div class="comment_author"><%= c.user.username %></div><% if current_user && current_user.admin %><%= link_to "delete", c, method: :delete, remote:true %><% end %></div>
  <% end %>
</div>
<% if user_signed_in? %>
<%= link_to "new comment", "#", id:"new_comment_link" %> 
<div id="create_comment" style="display:none">
  <%= render "comments/form" %>
</div>
<% end %>
</div>

<div id="chessBoardHolder" class="span8"></div>
</div>

<div id="colorIndicator" class="span2"></div>
<div id="answerButtons" style="display:none" class="span4"><button id="yes">Yes</button><button id="no">No</button></div>
<div id="gameHistoryDiv" style="display:none" class="span4"><button class="btn btn-small previousMove"><i class="icon-chevron-left"></i></button><button class="btn btn-small nextMove"><i class="icon-chevron-right"></i></button></div>



</div>



<script>
     $(document).ready(function() {
     
     if ("<%= @puzzle.puzzle_type %>" === "puzzle")
     chessBoard.startChessBoard({player:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>", type:"puzzle", lines:<%= raw(@instance.lines) %> });
     
     else if ("<%= @puzzle.puzzle_type %>" === "question") {
     chessBoard.startChessBoard({player:"locked",turn:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>" });
     $("#answerButtons").show();
     $("#answerButtons").on("click", "#yes", function() {
         $("#comments_list").show();
         $("#new_comment_link").show();
         $("#puzzle_navigation").show();
            
         if ("<%= @instance.solution %>" ===  "1") {
             $("#moveResult").text("Puzzle solved").addClass("puzzle_correct");
             var result = 1;            
         }
         else {
             $("#moveResult").text("Puzzle failed").addClass("puzzle_wrong");
             var result = 0;
         }
         $("#answerButtons").hide();
         $.ajax('/puzzles/solved',{
                type: "POST",
                data: {"puzzle_id":<%= @puzzle.id %>, "result": result}
         });  
         $("#new_comment_link").on("click", function(e) {
                e.preventDefault();
                $("#create_comment").toggle();
         
         }); 
     });
     $("#answerButtons").on("click", "#no", function() {
         $("#comments_list").show();
         $("#new_comment_link").show();
         $("#puzzle_navigation").show();
            
         if ("<%= @instance.solution %>" ===  "0") {
             $("#moveResult").text("Puzzle solved").addClass("puzzle_correct");
             var result = 1;
         }
         else {
             $("#moveResult").text("Puzzle failed").addClass("puzzle_wrong");
             var result = 0;
         }
         $("#answerButtons").hide();
         $.ajax('/puzzles/solved',{
                type: "POST",
                data: {"puzzle_id":<%= @puzzle.id %>, "result": result}
         });
         $("#new_comment_link").on("click", function(e) {
                e.preventDefault();
                $("#create_comment").toggle();
         
         });  
     });
     

     }

     if (chessBoard.turn === "white")
         $("#colorIndicator").addClass("colorWhite");
     else
         $("#colorIndicator").addClass("colorBlack");
    
     });

     
     

    var updatePageAfterChessBoardMove = function() {
        if (chessBoard.getPuzzleResult() === "solved") {
            $("#moveResult").text("Puzzle solved").addClass("puzzle_correct");
            $("#puzzle_navigation").show();
            $.ajax('/puzzles/solved',{
                type: "POST",
                data: {"puzzle_id":<%= @puzzle.id %>, "result": 1}
            });
            
            $("#comments_list").show();
            $("#new_comment_link").show();
            $('form').submit(function(evt) {  
                evt.preventDefault();
                var that = $(this);
                var data = that.serialize();
                var dest = that.attr("action");
                $.ajax(dest, {
                    type: "POST",
                    data: data,
                    dataType: "JSON",
                    success: function(json) {
                        $("textarea").val("");
                        if (json.text) 
                            $("#comments_list").append('<div class="comment_row"><div class="comment_text">'+json.text+'</div><div class="comment_author">'+json.name+'</div></div>');
                        
                    } 
                }); 
            });
            $("#new_comment_link").on("click", function(e) {
                e.preventDefault();
                $("#create_comment").toggle();
         
            });
        }
        if (chessBoard.getPuzzleResult() === "failed") {
            $("#moveResult").text("Puzzle failed").addClass("puzzle_wrong");
            $("#puzzle_navigation").show();
            $.ajax('/puzzles/solved',{
                type: "POST",
                data: {"puzzle_id":<%= @puzzle.id %>, "result": 0}
            });
            var holder = $("#chessBoardHolder"); 
            holder.children().remove();
            chessBoard.position = {};
            
            chessBoard.startChessBoard({player:"locked", size: 400,  fen:"<%= @instance.fen %>", type:"history", lines:<%= raw(@instance.solution) %>});
            $(".chessBoardPreviousEnd").removeClass("chessBoardPreviousEnd");
            $(".chessBoardPreviousStart").removeClass("chessBoardPreviousStart");
            $("#gameHistoryDiv").show();
            $("#comments_list").show();
            $("#new_comment_link").show(); 
            $('form').submit(function(evt) {  
                evt.preventDefault();
                var that = $(this);
                var data = that.serialize();
                var dest = that.attr("action");
                $.ajax(dest, {
                    type: "POST",
                    data: data,
                    dataType: "JSON",
                    success: function(json) {
                        $("form input").val("");
                        if (json.text)
                            $("#comments_list").append('<div class="comment_row"><div class="comment_text">'+json.text+'</div><div class="comment_author">'+json.name+'</div></div>');
                    } 
                }); 
            });
            $("#new_comment_link").on("click", function(e) {
                e.preventDefault();
                $("#create_comment").toggle();
         
            });
        }

        
    
    }

</script>
