
<div id="puzzle_title"><h2><%= @puzzle.title %></h2></div>
<div id="puzzle_explanation"><% if @instance.description %><%= @instance.description %><% elsif @puzzle.description %><%= @puzzle.description %><% else %>Find the best move(s)<% end %></div>
<div><div id="moveResult"></div><div id="puzzle_navigation" style="display:none"><%= link_to "Back to Index", puzzles_path %><%= link_to "Next Puzzle", @puzzle %></div>



<div class="row">
<div id="comments_box" class="span4">

<div id="comments_list" style="display:none">
  <% @comments.each do |c| %>
  <div class="comment_row"><div class="comment_text"><%= c.text %></div><div class="comment_author"><%= c.user.username %></div><% if current_user && current_user.admin %><%= link_to "delete", c, method: :delete, remote:true %><% end %></div>
  <% end %>
</div>
<% if user_signed_in? %>
<%= link_to "new comment", "#", id:"new_comment_link" %> 
<div id="create_comment" style="display:none">
  <%= render "comments/form" %>
</div>
<% end %>
</div>

<div id="chessBoardHolder" class="span8"></div>
<div id="remainingMoves"></div>
</div>

<div id="colorIndicator" class="span2"></div>
<div id="answerButtons" style="display:none" class="span4"><button id="yes">Yes</button><button id="no">No</button></div>
<div id="confirmButton" style="display:none" ><button id="confirmation">Confirm answer</button></div>
<div id="gameHistoryDiv" style="display:none" class="span4"><button class="btn btn-small previousMove"><i class="icon-chevron-left"></i></button><button class="btn btn-small nextMove"><i class="icon-chevron-right"></i></button></div>



</div>



<script>
  var load_comment_form = function(result) {
      $("#comments_list").show();
      $("#new_comment_link").show();  
      $("#answerButtons").hide();
      $("#confirmButton").hide();
      $("#puzzle_navigation").show();
         
      $('form').submit(function(evt) {  
                evt.preventDefault();
                var that = $(this);
                var data = that.serialize();
                var dest = that.attr("action");
                $.ajax(dest, {
                    type: "POST",
                    data: data,
                    dataType: "JSON",
                    success: function(json) {
                        $("textarea").val("");
                        $("#create_comment").hide();
                        if (json.text)
                            $("#comments_list").append('<div class="comment_row"><div class="comment_text">'+json.text+'</div><div class="comment_author">'+json.name+'</div></div>');
                    } 
                }); 
            });
         $("#new_comment_link").on("click", function(e) {
                e.preventDefault();
                $("#create_comment").toggle();
         
         }); 
 
         $.ajax('/puzzles/solved',{
                type: "POST",
                data: {"puzzle_id":<%= @puzzle.id %>, "result": result},
                success: function(json) {
                    if (json.message !== null) {
                        $("#messager").show();
                    }
                }
         });

         if (result === 1) {
             $("#moveResult").text("Puzzle solved").addClass("puzzle_correct");
         }
         else {
             $("#moveResult").text("Puzzle failed").addClass("puzzle_wrong");
         }

  }


  $(document).ready(function() {
     
     if ("<%= @puzzle.puzzle_type %>" === "puzzle")
         chessBoard.startChessBoard({player:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>", type:"puzzle", lines:<%= raw(@instance.lines) %>, label:<%= @puzzle.label %> });

     else if ("<%= @puzzle.puzzle_type %>" === "normal")
         chessBoard.startChessBoard({player:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>", type:"game", label:<%= @puzzle.label %> });

     else if ("<%= @puzzle.puzzle_type %>" === "opposition")
         chessBoard.startChessBoard({player:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>", type:"opposition", label:<%= @puzzle.label %> });

     else if ("<%= @puzzle.puzzle_type %>" === "selection") {
         chessBoard.startChessBoard({player:"locked", type:"selection", size: 400,  fen:"<%= @instance.fen %>", label:<%= @puzzle.label %> });
         $("#confirmButton").show();
         $("#confirmButton").on("click", "#confirmation", function() {
             var result = 1;
             var squares = <%= raw(@instance.solution) %>;
             
             for (var sq in squares) {
                 if ($("#"+squares[sq]).hasClass("chessBoardKeySquare") === false) {
                     result = 0;
                     break;
                 }
             }
             $(".chessBoardKeySquare").each(function() {
                 if ($.inArray($(this).attr("id"),squares) === -1) {
                     result = 0;
                 }
             });
             load_comment_form(result);
         }); 
     }
     
     else if ("<%= @puzzle.puzzle_type %>" === "question") {
         chessBoard.startChessBoard({player:"locked",turn:"<%= @side %>", size: 400,  fen:"<%= @instance.fen %>", label:<%= @puzzle.label %> });
         $("#answerButtons").show();


         $("#answerButtons").on("click", "#yes", function() {
            
             if ("<%= @instance.solution %>" ===  "1") 
                 var result = 1;            
             else 
                 var result = 0;
             
             load_comment_form(result);
         
         });
         $("#answerButtons").on("click", "#no", function() {
            
             if ("<%= @instance.solution %>" ===  "0") 
                 var result = 1;
             else 
                 var result = 0;
         
             load_comment_form(result);
         });
     

     }

     if (chessBoard.turn === "white")
         $("#colorIndicator").addClass("colorWhite");
     else
         $("#colorIndicator").addClass("colorBlack");
     $("#colorIndicator").tooltip({content: "ola"});

     moves = <%= @puzzle.moves %>
     updatedMoves = false;

     if (moves)
        $("#remainingMoves").text("Remaining Moves: "+moves);
  });

     
     

    var updatePageAfterChessBoardMove = function() {
        
        if (moves && chessBoard.turn !== "<%= @side %>") {
            moves -= 1;
            $("#remainingMoves").text("Remaining Moves: "+moves);
        }

        if ("<%= @puzzle.puzzle_type %>" === "puzzle" && moves) { 
            if (chessBoard.getPuzzleResult() === "solved") {
                load_comment_form(1);
            }
            if (chessBoard.getPuzzleResult() === "failed") {
                $("#chessBoardHolder").children().remove();
                chessBoard.position = {};
            
                chessBoard.startChessBoard({player:"locked", size: 400,  fen:"<%= @instance.fen %>", type:"history", lines:<%= raw(@instance.solution) %>});
                $(".chessBoardPreviousEnd").removeClass("chessBoardPreviousEnd");
                $(".chessBoardPreviousStart").removeClass("chessBoardPreviousStart");
                $("#gameHistoryDiv").show();
                load_comment_form(0);
            }
        }

        else if ("<%= @puzzle.puzzle_type %>" === "normal") {
            if (chessBoard.getResult() === "<%= @side %>") {
                load_comment_form(1);
            }
            else if (chessBoard.getResult() === "draw") {
                load_comment_form(0);
            }
            

            if (chessBoard.turn !== "<%= @side %>") {
                

                var move = "<%= @side %>" === "white" ? engine.getEvaluation(chessBoard.position, "black", engine.depth, false, <%= @puzzle.id %>) : engine.getEvaluation(chessBoard.position, "white", engine.depth, false, <%= @puzzle.id %>);
                chessBoard.movePiece(move[0][0],move[0][1]);
            
                if(<%= @puzzle.id %> === 14 && Math.abs(chessBoard.getScore(chessBoard.position)) > 4) {
                    load_comment_form(1);
                    chessBoard.lock();
                }  
                if(<%= @puzzle.id %> === 15 || <%= @puzzle.id %> === 16 || <%= @puzzle.id %> === 17) {
                    if (("<%= @side %>" === "white" && chessBoard.getScore(chessBoard.position) === 8.5) || ("<%= @side %>" === "black" && chessBoard.getScore(chessBoard.position) === -8.5)) {
                        load_comment_form(1);
                        chessBoard.lock();
                    }
                    if (("<%= @side %>" === "white" && chessBoard.getScore(chessBoard.position) === -1) || ("<%= @side %>" === "black" && chessBoard.getScore(chessBoard.position) === 1)) {
                        load_comment_form(0);
                        chessBoard.lock();
                        
                    }
                    if (("<%= @side %>" === "white" && chessBoard.getScore(chessBoard.position) === -8.5) || ("<%= @side %>" === "black" && chessBoard.getScore(chessBoard.position) === 8.5)) {
                        load_comment_form(0);
                        chessBoard.lock();
                    }
                    if(Math.abs(chessBoard.getScore(chessBoard.position)) === 0 && chessBoard.getResult() === "active") {
                        moves = updatedMoves ? moves : (<%= @puzzle.id %> === 17 ? 3 : 1);
                        updatedMoves = true;
                        $("#remainingMoves").text("Remaining Moves: "+moves);
                    }                 
                } 
            }
            
            
        }
  
        else if ("<%= @puzzle.puzzle_type %>" === "opposition" && moves) {
            
            if (chessBoard.turn !== "<%= @side %>") {

                if (chessBoard.getOppositionResult(<%= raw(@instance.solution) %>))
                    load_comment_form(1);
                else {
                    var move = "<%= @side %>" === "white" ? engine.getEvaluation(chessBoard.position, "black", engine.depth, <%= raw(@instance.solution) %>, <%= @puzzle.id %>, "evilmind") : engine.getEvaluation(chessBoard.position, "white", engine.depth, <%= raw(@instance.solution) %>,<%= @puzzle.id %>, "evilmind");
                    chessBoard.movePiece(move[0][0],move[0][1]);
                } 
            }
            
        }

        if (!moves) {
               if (chessBoard.getResult() === "<%= @side %>")
                   load_comment_form(1);
               else if ((<%= @puzzle.id %> === 15 || <%= @puzzle.id %> === 16 || <%= @puzzle.id %> === 17) && Math.abs(chessBoard.getScore(chessBoard.position)) === 8.5 && chessBoard.turn === "<%= @side %>")  {
                   load_comment_form(1);
                   chessBoard.lock();
               }
               
               else if (chessBoard.getResult() === "active" && chessBoard.turn === "<%= @side %>") {
                   load_comment_form(0);
                   chessBoard.lock();
                }
               
        } 
  

        
     }

</script>
